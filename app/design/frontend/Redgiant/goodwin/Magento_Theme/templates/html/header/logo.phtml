<?php
/**
 * Copyright Â© 2013-2017 Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */

// @codingStandardsIgnoreFile

/**
 * @var \Magento\Theme\Block\Html\Header\Logo $block
 */
?>
<?php
	$goodwin_helper = $this->helper('Redgiant\Goodwin\Helper\Data');
?>
<?php $storeName = $block->getThemeName() ? $block->getThemeName() : $block->getLogoAlt(); ?>
<?php if ($block->isHomePage()): ?>
    <strong class="logo">
<?php else: ?>
    <a class="logo" href="<?php echo $block->getUrl(''); ?>" title="<?php echo $storeName; ?>">
<?php endif; ?>
<?php if($goodwin_helper->getConfig('goodwin_settings/header/sticky_header')): ?>
<?php
$sticky_logo_src = "";
if($logo_src = $goodwin_helper->getConfig('goodwin_settings/header/sticky_header_logo_src')) {
    $folderName = \Redgiant\Goodwin\Model\Config\Backend\Image\Stickylogo::UPLOAD_DIR;
    $path = $folderName . '/' . $logo_src;
    $sticky_logo_src = $goodwin_helper->getBaseUrl() . $path;
} else {
	$sticky_logo_src = $block->getLogoSrc();
}
?>
        <img class="sticky-logo" src="<?php echo $sticky_logo_src; ?>"
             alt="<?php echo $block->getLogoAlt(); ?>"
        />
<?php endif; ?>
        <img class="default-logo" src="<?php echo $block->getLogoSrc(); ?>"
             alt="<?php echo $block->getLogoAlt(); ?>"
        />
<?php if ($block->isHomePage()): ?>
    </strong>
<?php else: ?>
    </a>
<?php endif; ?>
<script>
    require(['jquery', 'domReady!'], function($){
        // Convert img to svg
        jQuery('.logo img').filter(function() {
            return this.src.match(/.*\.svg$/);
        }).each(function(){
            var $img = $(this);
            var imgID = $img.attr('id');
            var imgClass = $img.attr('class');
            var imgURL = $img.attr('src');
            $.get(imgURL, function(data) {
                // Get the SVG tag, ignore the rest
                var $svg = $(data).find('svg');
                // Add replaced image's ID to the new SVG
                if(typeof imgID !== 'undefined') {
                    $svg = $svg.attr('id', imgID);
                }
                // Add replaced image's classes to the new SVG
                if(typeof imgClass !== 'undefined') {
                    $svg = $svg.attr('class', imgClass+' replaced-svg');
                }
                // Remove any invalid XML tags as per http://validator.w3.org
                $svg = $svg.removeAttr('xmlns:a');
                // Check if the viewport is set, if the viewport is not set the SVG wont't scale.
                if(!$svg.attr('viewBox') && $svg.attr('height') && $svg.attr('width')) {
                    $svg.attr('viewBox', '0 0 ' + $svg.attr('height') + ' ' + $svg.attr('width'));
                }
                // Replace image with new SVG
                $img.replaceWith($svg);
            }, 'xml');
        });
    });
</script>
